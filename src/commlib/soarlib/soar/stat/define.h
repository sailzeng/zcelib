/*!
* @copyright  2004-2021  Apache License, Version 2.0 FULLSAIL
* @filename   define.h
* @author     yunfeiyang 
* @version    
* @date       2021年5月5日
* @brief      
*             
*             
* @details    框架监控特性ID定义
*             
*             
*             
* @note       
*             
*/


#ifndef SOARING_LIB_MONITOR_DEFINE_H_
#define SOARING_LIB_MONITOR_DEFINE_H_

// 框架特性ID从100开始,到1000,
enum COMM_STAT_FEATURE_ID
{
    // 无效的统计ID
    COMM_STAT_INVALID_ID              = 0,
    // 以下特性ID只能往后加，不能在中间插入，因为这些特性值已经在monitor上配置了
    COMM_STAT_FEATURE_ID_BEGIN        = 101,
    // BUS的统计
    // BUS收到的包量
    COMM_STAT_BUS_RECV_COUNT          = 102,
    // BUS发送成功的包量
    COMM_STAT_BUS_SEND_SUCC           = 103,
    // BUS发送失败的包量
    COMM_STAT_BUS_SEND_FAIL           = 104,
    // BUS收到数据的字节数
    COMM_STAT_BUS_RECV_BYTES          = 105,
    // BUS发送包的字节数
    COMM_STAT_BUS_SEND_BYTES          = 106,


    // 往notify task队列中发送数据失败的量
    //
    COMM_STAT_TASK_QUEUE_RECV_COUNT   = 110,
    //
    COMM_STAT_TASK_QUEUE_SEND_FAIL    = 111,
    //
    COMM_STAT_TASK_QUEUE_SEND_SUCC    = 112,


    // 包处理结果的统计
    // app事务处理成功的量
    COMM_STAT_TRANS_END_SUCC          = 121,
    // app事务处理失败的量
    COMM_STAT_TRANS_END_FAIL          = 122,
    // app事务处理超时的量
    COMM_STAT_TRANS_PROC_TIMEOUT      = 123,
    // app事务处理出错的错误码
    COMM_STAT_TRANS_PROC_ERRNO        = 124,
    // app事务花费的时间
    COMM_STAT_TRANS_USE_TIME          = 125,

    // app进程存活状态,只要有数值上报，表示进程存在,采用绝对值保存
    COMM_STAT_APP_ALIVE               = 130,
    //服务器重启的次数
    COMM_STAT_APP_RESTART_TIMES       = 131,
    //服务器离线的次数，正常退出
    COMM_STAT_APP_EXIT_TIMES          = 132,

    // 进程及系统监控上报项
    // 系统的CPU利用千分率
    COMM_STAT_SYS_CPU_RATIO           = 140,
    // 进程的CPU利用千分率
    COMM_STAT_PROCESS_CPU_RATIO       = 141,
    // 系统内存使用千分率
    COMM_STAT_SYS_MEM_USE_RATIO       = 142,
    // 系统当前可用内存（单位：Byte）
    COMM_STAT_AVAILABLE_MEM_SIZE      = 143,


};


// 统计配置信息
static const zce::STATUS_ITEM_WITHNAME COMM_STAT_ITEM_WITH_NAME[] =
{
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BUS_RECV_COUNT,        zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BUS_SEND_SUCC,         zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BUS_SEND_FAIL,         zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BUS_RECV_BYTES,        zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BUS_SEND_BYTES,        zce::STATUS_STATICS::PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_TASK_QUEUE_RECV_COUNT, zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TASK_QUEUE_SEND_FAIL,  zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TASK_QUEUE_SEND_FAIL,  zce::STATUS_STATICS::PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_END_SUCC,        zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_END_FAIL,        zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_PROC_TIMEOUT,    zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_PROC_ERRNO,      zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_USE_TIME,        zce::STATUS_STATICS::PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_APP_ALIVE,             zce::STATUS_STATICS::ABSOLUTE_VALUE),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_APP_RESTART_TIMES,     zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_APP_EXIT_TIMES,        zce::STATUS_STATICS::PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_SYS_CPU_RATIO,         zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_PROCESS_CPU_RATIO,     zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SYS_MEM_USE_RATIO,     zce::STATUS_STATICS::PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_AVAILABLE_MEM_SIZE,    zce::STATUS_STATICS::PER_FIVE_MINTUES),

};

// 上报数据项个数
static const unsigned int COMM_STAT_FRATURE_NUM = ZCE_ARRAY_SIZE(COMM_STAT_ITEM_WITH_NAME);

#endif //COMM_STAT_DEFINE_H_
