/// @file       soar_stat_define.h
/// @date       2012/07/21 15:04
///
/// @author     yunfeiyang
///
/// @brief      框架监控特性ID定义
///

#ifndef SOARING_LIB_MONITOR_DEFINE_H_
#define SOARING_LIB_MONITOR_DEFINE_H_


// 框架特性ID从9100开始
enum CommStatFeatureID
{
    // 无效的统计ID
    COMM_STAT_INVALID_ID        = 0,
    // 以下特性ID只能往后加，不能在中间插入，因为这些特性值已经在monitor上配置了
    COMM_STAT_FEATURE_ID_BEGIN  = 9100,
    // 包量的统计
    // app收到的包量
    COMM_STAT_RECV_PKG_COUNT    = 9101,
    // app发送成功的包量
    COMM_STAT_SEND_PKG_SUCC     = 9102,
    // app发送失败的包量
    COMM_STAT_SEND_PKG_FAIL     = 9103,

    // 包处理结果的统计
    // app事务处理成功的量
    COMM_STAT_TRANS_END_SUCC   = 9104,
    // app事务处理失败的量
    COMM_STAT_TRANS_END_FAIL   = 9105,
    // app事务处理超时的量
    COMM_STAT_TRANS_PROC_TIMEOUT = 9106,
    // app事务处理出错的错误码
    COMM_STAT_TRANS_PROC_ERRNO  = 9107,

    // app事务花费的时间
    COMM_STAT_TRANS_USE_TIME    = 9108,

    // app进程存活状态,只要有数值上报，表示进程存在
    COMM_STAT_APP_ALIVE         = 9109,

    // app产生的帐单量统计
    COMM_STAT_BILL_COUNT        = 9110,

    // 进程及系统监控上报项
    // 系统的CPU利用千分率
    COMM_STAT_SYS_CPU_RATIO     = 9111,
    // 进程的CPU利用千分率
    COMM_STAT_PROCESS_CPU_RATIO = 9112,
    // 系统内存使用千分率
    COMM_STAT_SYS_MEM_USE_RATIO = 9113,
    // 系统当前可用内存（单位：Byte）
    COMM_STAT_AVAILABLE_MEM_SIZE = 9114,

    // app收到数据的字节数
    COMM_STAT_RECV_PKG_BYTES        = 9115,
    // app发送包的字节数
    COMM_STAT_SEND_PKG_BYTES        = 9116,

    // 往notify task队列中发送数据失败的量
    COMM_STAT_TASK_QUEUE_SEND_FAIL = 9117,


    COMM_STAT_APP_RESTART_TIMES     = 9200,
    COMM_STAT_APP_OFFLINE           = 9201,

};

// 框架分类id
enum CommStatClassfyID
{
    COMM_STAT_ZERG_CID = 1,
    COMM_STAT_APP_CID,
};


// 统计配置信息
static const ZCE_STATUS_ITEM_WITHNAME COMM_STAT_ITEM_WITH_NAME[] =
{
    DEF_ZCE_STATUS_ITEM(COMM_STAT_RECV_PKG_COUNT, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SEND_PKG_SUCC, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SEND_PKG_FAIL, STATICS_PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_END_SUCC, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_END_FAIL, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_PROC_TIMEOUT, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_PROC_ERRNO, STATICS_PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_TRANS_USE_TIME, STATICS_PER_FIVE_MINTUES),

    DEF_ZCE_STATUS_ITEM(COMM_STAT_APP_ALIVE, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_BILL_COUNT, STATICS_PER_FIVE_MINTUES),

    // 进程及系统监控上报项
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SYS_CPU_RATIO, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_PROCESS_CPU_RATIO, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SYS_MEM_USE_RATIO, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_AVAILABLE_MEM_SIZE, STATICS_PER_FIVE_MINTUES),

    // app收到的包字节数
    DEF_ZCE_STATUS_ITEM(COMM_STAT_RECV_PKG_BYTES, STATICS_PER_FIVE_MINTUES),
    DEF_ZCE_STATUS_ITEM(COMM_STAT_SEND_PKG_BYTES, STATICS_PER_FIVE_MINTUES),

    // 往notify task队列中发送数据失败的量
    DEF_ZCE_STATUS_ITEM(COMM_STAT_TASK_QUEUE_SEND_FAIL, STATICS_PER_FIVE_MINTUES),

};

// 上报数据项个数
static const unsigned int COMM_STAT_FRATURE_NUM = ZCE_ARRAY_SIZE(COMM_STAT_ITEM_WITH_NAME);

#endif //COMM_STAT_DEFINE_H_
